//--------------------------For Users Table
DELIMITER $$
create trigger user_id_creation
BEFORE INSERT on users
for each row
BEGIN 
DECLARE P1 VARCHAR(50);
SELECT id INTO P1 FROM users order by id desc limit 1; 
SET NEW.gid = CONCAT(DATE_FORMAT(curdate(),"%y"),DATE_FORMAT(curdate(),"%m"), LPAD(P1+1, 3, '0'));  
end $$
DELIMITER ;
//-----------------------------------------------------



//----------------------------- For arbitration_agreements----------- NEW UPDATE 7 - SEPTEMBER
IF (NEW.is_active = 1 OR NEW.is_active = 3) AND (NEW.ar_id is null or NEW.ar_id ='') THEN 
BEGIN 
DECLARE P1 VARCHAR(50); 
DECLARE P2 VARCHAR(50); 
DECLARE P3 VARCHAR(50);
DECLARE P4 VARCHAR(50);
DECLARE P5 VARCHAR(50);


select count(id) INTO P3 from (
select id,invoice_no,stamp_state_id from arbitration_agreements where is_active=1 or is_active=3
union all
select id,invoice_no,business_state_id from membership_plan_issues where is_active=1
) invoice_tbl
where invoice_no is not null and invoice_no !="";


SELECT 
concat('NC',state_code,u.gid,LPAD(count+1, 3, '0')), 
concat('AA',state_code,u.gid,LPAD(count2+1, 3, '0')), 

concat(state_code,LPAD(count2+1, 3, '0'),date_format(curdate(),'%y'),'/',LPAD(P3+1, 3, '0'))
 INTO P1,P4,P2 
from ( SELECT ar.id id,state_code,ifnull(freeze_user_id,user_id) user_id, 
(select count(id) from arbitration_agreements where is_active=1 or is_active=3) count,

(select count(id) from arbitration_agreements where parent_arbitration_agreements_id = 0 AND (is_active=1 or is_active=3)) count2

 FROM arbitration_agreements ar 

left join states s on ar.invoice_state_id_primary_id=s.id ) tab 

left join users u on tab.user_id=u.id where tab.id=NEW.id;


SET NEW.ar_id = P1; 

IF (NEW.parent_arbitration_agreements_id = 0) THEN
SET NEW.aa_id = P4; 
END IF;

SET NEW.invoice_no = P2; 
END; 
END IF

//----------------------------- For arbitration_agreements-----------
DELIMITER $$
create trigger ar_update
BEFORE UPDATE on arbitration_agreements
for each row
IF (NEW.is_active = 1 OR NEW.is_active = 3) AND (NEW.ar_id is null or NEW.ar_id ='') THEN 
BEGIN 
DECLARE P1 VARCHAR(50); 
DECLARE P2 VARCHAR(50); 
DECLARE P3 VARCHAR(50);


select count(id) INTO P3 from (
select id,invoice_no,stamp_state_id from arbitration_agreements where is_active=1 or is_active=3
union all
select id,invoice_no,business_state_id from membership_plan_issues where is_active=1
) invoice_tbl
where invoice_no is not null and invoice_no !="";


SELECT concat('NC',state_code,u.gid,LPAD(count+1, 3, '0')), 
concat(state_code,LPAD(count+1, 3, '0'),date_format(curdate(),'%y'),'/',LPAD(P3+1, 3, '0')) INTO P1,P2 
from ( SELECT ar.id id,state_code,ifnull(freeze_user_id,user_id) user_id, (select count(id) from arbitration_agreements where is_active=1 or is_active=3) count FROM arbitration_agreements ar left join states s on ar.invoice_state_id_primary_id=s.id ) tab left join users u on tab.user_id=u.id where tab.id=NEW.id; 
SET NEW.ar_id = P1; 
SET NEW.aa_id = REPLACE(P1,'NC','AA'); 
SET NEW.invoice_no = P2; END; 
END IF;
end $$
DELIMITER;
//----------------------------------------------------------------




//----------------------------- For Membership-----------
DELIMITER $$
create trigger ms_update
BEFORE UPDATE on membership_plan_issues
for each row
IF (NEW.is_active = 1) AND (NEW.ms_id is null or NEW.ms_id ='') THEN 
BEGIN 
DECLARE P1 VARCHAR(50); 
DECLARE P2 VARCHAR(50);
DECLARE P3 VARCHAR(50);

select count(id) INTO P3 from (
select id,invoice_no,stamp_state_id from arbitration_agreements where is_active=1 or is_active=3
union all
select id,invoice_no,business_state_id from membership_plan_issues where is_active=1
) invoice_tbl
where invoice_no is not null and invoice_no !="" limit 1;



SELECT concat('MS',state_code,gid,LPAD(count+1, 3, '0')),
concat(state_code,LPAD(count+1, 3, '0'),date_format(curdate(),'%y'),'/',LPAD(P3+1, 3, '0'))
INTO P1,P2
from ( select state_code,gid, (select count(id) from membership_plan_issues where is_active=1) count FROM membership_plan_issues ms left join states s on ms.invoice_state_id=s.state_name left join users u on ms.user_id=u.id where ms.id=NEW.id ) tab limit 1;


SET NEW.ms_id = P1; 
SET NEW.invoice_no = P2;
END; END IF;
end $$
DELIMITER;

//----------------------------------------------------------------